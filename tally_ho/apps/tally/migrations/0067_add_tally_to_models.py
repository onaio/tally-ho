# Generated by Django 4.2.2 on 2025-08-16 20:01

import django.db.models.deletion
from django.db import migrations, models


def populate_tally_fields(apps, schema_editor):
    """
    Populate the tally field using raw SQL for maximum efficiency
    """
    from django.db import connection

    # Map model names to table names
    updates = [
        ('tally_archive', 'archive'),
        ('tally_audit', 'audit'),
        ('tally_clearance', 'clearance'),
        ('tally_qualitycontrol', 'qualitycontrol'),
        ('tally_reconciliationform', 'reconciliationform'),
        ('tally_result', 'result'),
        ('tally_resultformstats', 'resultformstats'),
        ('tally_workflowrequest', 'workflowrequest'),
    ]

    with connection.cursor() as cursor:
        for table_name, model_name in updates:
            cursor.execute(f"""
                UPDATE {table_name} t
                SET tally_id = rf.tally_id
                FROM tally_resultform rf
                WHERE t.result_form_id = rf.id
                AND rf.tally_id IS NOT NULL
            """)
            print(f"Updated {cursor.rowcount} {model_name} records")


def reverse_populate_tally_fields(apps, schema_editor):
    """
    Reverse migration - no action needed as we're removing the fields
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("tally", "0066_change_serial_number_to_bigint"),
    ]

    operations = [
        migrations.AddField(
            model_name="archive",
            name="tally",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="archives",
                to="tally.tally",
            ),
        ),
        migrations.AddField(
            model_name="audit",
            name="tally",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="audits",
                to="tally.tally",
            ),
        ),
        migrations.AddField(
            model_name="clearance",
            name="tally",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="clearances",
                to="tally.tally",
            ),
        ),
        migrations.AddField(
            model_name="qualitycontrol",
            name="tally",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="quality_controls",
                to="tally.tally",
            ),
        ),
        migrations.AddField(
            model_name="reconciliationform",
            name="tally",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="reconciliation_forms",
                to="tally.tally",
            ),
        ),
        migrations.AddField(
            model_name="result",
            name="tally",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="results",
                to="tally.tally",
            ),
        ),
        migrations.AddField(
            model_name="resultformstats",
            name="tally",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="result_form_stats",
                to="tally.tally",
            ),
        ),
        migrations.AddField(
            model_name="workflowrequest",
            name="tally",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="workflow_requests",
                to="tally.tally",
            ),
        ),
        migrations.RunPython(
            populate_tally_fields,
            reverse_populate_tally_fields,
        ),
    ]
